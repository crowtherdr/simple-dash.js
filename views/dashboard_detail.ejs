<%
  // figure out the time
  var last_updated_raw = moment(updated).tz("America/Denver");
  var last_updated = last_updated_raw.format('h:mm a');


  //figure out CSS classes for uptime_status
  var STATUS_TO_DISPLAY = {
      'good' : 'success',
      'slow' : 'warning',
      'down' : 'danger'
    };


  glyph = "glyphicon-" + ({
    "good" : "ok-sign",
    "slow" : "warning-sign",
    "down" : "minus-sign"
  }[current.uptime_status] || "question-sign");

%>


<!DOCTYPE html>
<html>
<head>
  <title>FamilySearch Status</title>
  <link rel="stylesheet" href="../../vendor/bootstrap/css/bootstrap.min.css">
  <link rel="stylesheet" href="../../vendor/bootstrap/css/bootstrap-theme.min.css">
  <link rel="stylesheet" href="../../css/dashboard.css">
  <meta name="viewport" content="width=device-width">
  <meta http-equiv="refresh" content="60">
</head>



<body class="detail <%- page_type %>_type">

  <nav class="navbar navbar-inverse navbar-static-top" role="navigation">
    <div class="container">
      <div class="navbar-header">
        <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target=".navbar-collapse">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav">
          <li><a href="../../">Home</a></li>
          <li><a href="../../change">Change</a></li>
          <li><a class="refresh" href="#"><span class="glyphicon glyphicon-refresh"></span> Last updated at <span id="updatedTimestamp" ><%- last_updated %></span></a></li>
        </ul>
      </div><!--/.navbar-collapse -->
    </div>
  </nav>

  <div class="container">
    <div class="mast_head section">
      <h1 class="page_title"><%- app_id %> Status</h1>
      <div id="status_current_cont" class="curr_status <%- STATUS_TO_DISPLAY[current.uptime_status] %>">
        <span class="glyphicon <%- glyph %>" style="top: 4px;"></span>
        <span style="text-transform: capitalize;" id="stats_uptime" data-target="uptime_status" class="stats_fld">
          <%- current.uptime_status %></span>
      </div>
    </div>



    <div class="health section cf hide-upstream">
      <h2 class="section_heading">Health @ <span id="stats_last_updated" data-target="time"><%- last_updated %></span> (<span id="stats_time_elapsed" data-target="time_elapsed" class="stats_fld"><%- last_updated_raw.fromNow() %></span>)</h2>

      <div class="item throughput">
        <span class="title">req / 5 min</span>
        <span class="metric"><span id="stats_req" data-target="status_total" class="stats_fld"><%- current['status_total'] %></span><span class="suffix">req</span></span>
      </div>

      <div class="item resp_time">
        <span class="title">p95 response time</span>
        <% if (parseInt(current['p95']) === 0) { %>
        <span id="stats_p95" data-target="p95" class="metric stats_fld">n/a</span><span class="suffix">ms</span>
        <% } else { %>
        <span class="metric"><span id="stats_p95" data-target="p95" class="stats_fld"><%- current['p95'] %></span><span class="suffix">ms</span>
        <% } %>
        </span>
      </div>

      <div class="item memory hide-api">
        <span class="title">Memory (AVG &amp; MAX)</span>
        <span class="metric">
          <span id="stats_mem_avg" data-target="memory_avg" class="stats_fld"><%- Math.round(current['memory_avg']) %></span><span class="suffix">MB</span>
        </span>
        <span class="metric">
          <span id="stats_mem_max" data-target="memory_max" class="stats_fld"><%- Math.round(current['memory_max']) %></span><span class="suffix">MB</span>
        </span>
      </div>


      <div class="item error_rate">
        <span class="title">Error rate (5xx / total)</span>
        <span class="metric"><span id="stats_error_rate" data-target="error_rate" lass="stats_fld"><%- current.error_rate %></span><span class="suffix">%</span></span>
      </div>

      <div class="item status_count">
        <span class="title">Status codes</span>
        <div class="totals">
          <span class="item">2xx: <span id="stats_2xx" data-target="status_2xx" class="stats_fld"><%- current['status_2xx'] %></span></span>
          <span class="item">3xx: <span id="stats_3xx" data-target="status_3xx" class="stats_fld"><%- current['status_3xx'] %></span></span>
          <span class="item">4xx: <span id="stats_4xx" data-target="status_4xx" class="stats_fld"><%- current['status_4xx'] %></span></span>
          <span class="item">5xx: <span id="stats_5xx" data-target="status_5xx" class="stats_fld"><%- current['status_5xx'] %></span></span>
        </div>

      </div>

      <div class="item status_count hide-api">
        <span class="title">Heroku codes</span>
        <div class="totals stats_fld" id="heroku_errors">

        <% if (typeof heroku_errors == "undefined") heroku_errors = []; %>
        <% for(var k=0; k < heroku_errors.length; k++ ) { %>
          <span class="item" title="<%- heroku_errors[k]['code'] %>: <%- heroku_errors[k]['desc'] %>"><%- heroku_errors[k]['code'] %>: <%- heroku_errors[k]['count'] %>  </span>

        <% } %>
        </div>

      </div>

    </div><!-- /.health-->

    <div class="history section">
      <h2 class="section_heading">Uptime History</h2>
      <!-- FIXME: Generate this from markup, not in JS. Just use the title tag... -->
      <div class="history_timeline cf">
        <% for (var i=0; i < app_history.length; i++) { %>
        <%
          var history_time = moment.unix(app_history[i].stats.timestamp).tz("America/Denver");
          var stats = app_history[i].stats;

          stats.time = history_time.format('h:mm a');
          stats.time_elapsed = history_time.fromNow();
          stats.heroku_errors = app_history[i]['status:dashboard:frontier:heroku_errors'] && app_history[i]['status:dashboard:frontier:heroku_errors'].codes || [];
          // The following is how we did this previously, but there is currently an issue with how the stats are being saved.
          // stats.heroku_errors = app_history[i].stats.heroku_errors && app_history[i].stats.heroku_errors.codes || [];
        %>

          <label
            class="label label-<%- STATUS_TO_DISPLAY[app_history[i].stats.uptime_status] %>"
            data-stats='<%- JSON.stringify(app_history[i].stats) %>'
            <%
              var history_heroku_errors = stats.heroku_errors;
              var pretty_string = "";
              for(var k=0; k < history_heroku_errors.length; k++ ) {
                pretty_string += history_heroku_errors[k]['code'] + ":" + history_heroku_errors[k]['count'] + " (" + history_heroku_errors[k]['desc'] + ") | ";

              } //for()
            %>


            data-heroku-errors-pretty='<%- pretty_string %>'>
          </label>
        <% } %>
      </div><!-- /.history_timeline -->
    </div><!-- /.history -->




    <div class="other_apis section hide-api hide-upstream cf">
      <div class="status-table">
        <h3 class="section_heading">Dependent APIs</h3>
      <%
        if(typeof api_data != "undefined") {

          var dependent_apis = api_data;

          // console.log("api_data", api_data);
          for(var j=0; j < dependent_apis.length; j++) {

            var api_status = dependent_apis[j].stats.uptime_status;

            //figure out CSS classes for uptime_status
            api_glyph = "glyphicon-" + ({
              "good" : "ok-sign",
              "slow" : "warning-sign",
              "down" : "minus-sign"
            }[api_status] || "question-sign")

      %><a class="app_link btn btn-<%- STATUS_TO_DISPLAY[api_status] %>" href="../../detail/api/<%- encodeURIComponent(dependent_apis[j].api) %>"><span class="glyphicon <%- api_glyph %>" style="top: 2px;"></span> <%- dependent_apis[j].api %></a><% } } %>
    </div>
  </div> <!-- /.other_apis -->

  <div class="events section cf hide-api hide-upstream">
    <h2 class="section_heading">Event History</h2>

    <div class="change_item_container">
      <%
        if (typeof events == "undefined") events = [];
        for(var z=0; z < events.length; z++) {

          var currentdate = moment.unix(events[z].timestamp);
          var formatted_time = currentdate.format('h:mm a [on] MMM Do YYYY');

          //personalize based on what source it is
          var icon = events[z].src;

          if (events[z].src === "github") {
            var action = "Committed";
            var name = events[z].data.repo_name;
            var msg = events[z].data.commit.message;
            var msg_url = events[z].data.commit.url;
          } else if (events[z].src === "jenkins") {
            var action = "Deployed";
            var name = events[z].data.app_name;
            var msg = "";
          }

      %>

      <div class="item cf">
          <span class="icon <%- icon %>"><%- icon %></span>

        <div class="change_detail">
          <span class="commit_msg"><%- action %> <span class="" style="font-weight: bold"><%- name %></span> <%- msg %> <span class="change_meta"><%- currentdate.fromNow() %> @ <%- formatted_time %></span><!-- /.change_meta -->
          </span><!-- /.commit_msg -->
        </div><!-- /.change_detail -->

      </div><!-- /.item -->
       <% } %>
    </div>
  </div><!-- /.events -->


  <script src="http://code.jquery.com/jquery-2.0.0.min.js"></script>
  <script src="../../vendor/bootstrap/js/bootstrap.min.js"></script>
  <script src="../../js/utils.js"></script>
  <script src="../../js/detail_utils.js"></script>
  <!-- <script src="http://mbostock.github.com/d3/d3.v2.js"></script> -->
</body>
</html>
